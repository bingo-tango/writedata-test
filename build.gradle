plugins {
    id 'java'
    id "me.champeau.jmh" version "0.7.0"
}

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        url = 'https://artifacts.unidata.ucar.edu/content/repositories/unidata-releases/'
    }
}

jmh {
//    includes = ['Read*'] // include pattern (regular expression) for benchmarks to be executed
    excludes = ['Gson']
    iterations = 5 // Number of measurement iterations to do.
    batchSize = 1 // Batch size: number of benchmark method calls per operation. (some benchmark modes can ignore this setting)
    fork = 2 // How many times to forks a single benchmark. Use 0 to disable forking altogether
    warmup = '1s' // Time to spend at each warmup iteration.
    warmupBatchSize = 2 // Warmup batch size: number of benchmark method calls per operation.
    warmupForks = 0 // How many warmup forks to make for a single benchmark. 0 to disable warmup forks.
    warmupIterations = 1 // Number of warmup iterations to do.
}
dependencies {
    // https://mvnrepository.com/artifact/com.google.protobuf/protobuf-java
    implementation group: 'com.google.protobuf', name: 'protobuf-java', version: '3.22.2'
    jmh group: 'com.google.protobuf', name: 'protobuf-java', version: '3.22.2'
    // https://mvnrepository.com/artifact/com.google.code.gson/gson
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.10.1'
    jmh group: 'com.google.code.gson', name: 'gson', version: '2.10.1'


    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'

    // https://mvnrepository.com/artifact/org.openjdk.jmh/jmh-core
    testImplementation group: 'org.openjdk.jmh', name: 'jmh-core', version: '1.36'
    // https://mvnrepository.com/artifact/org.openjdk.jmh/jmh-generator-annprocess
    testImplementation group: 'org.openjdk.jmh', name: 'jmh-generator-annprocess', version: '1.36'

}

test {
    useJUnitPlatform()
    maxHeapSize = "8000m" // maximum heap size
}